// Code generated by github.com/vedranvuk/cmdline DO NOT EDIT.

package main

import (
	"os"

	"github.com/vedranvuk/cmdline"
	models "github.com/vedranvuk/cmdline/_testproject/pkg/models"
)

var (
	optionsVar = new(models.Options)
	configVar  = new(models.Config)
)

var (
	optionsCmd = &cmdline.Command{
		Name: "options",
		Help: "Defines a set of options.",
		Options: cmdline.Options{
			&cmdline.Option{
				LongName:  "outDir",
				ShortName: "",
				Help:      "Output directory.  OutputDirectory is the output directory.  This is a\nmultiline comment.",
				Var:       &optionsVar.OutputDirectory,
				Kind:      cmdline.Required,
			},
		},
		Handler: handleOptions,
	}
	configCmd = &cmdline.Command{
		Name: "config",
		Help: "",
		Options: cmdline.Options{
			&cmdline.Option{
				LongName:  "Name",
				ShortName: "",
				Help:      "Name is the name.",
				Var:       &configVar.Name,
				Kind:      cmdline.Optional,
			},
			&cmdline.Option{
				LongName:  "Age",
				ShortName: "",
				Help:      "Age is the age.",
				Var:       &configVar.Age,
				Kind:      cmdline.Required,
			},
			&cmdline.Option{
				LongName:  "Subscribed",
				ShortName: "",
				Help:      "Subscribed is usually true.",
				Var:       &configVar.Subscribed,
				Kind:      cmdline.Boolean,
			},
			&cmdline.Option{
				LongName:  "EMail",
				ShortName: "",
				Help:      "EMail is the email address.",
				Var:       &configVar.Sub.EMail,
				Kind:      cmdline.Optional,
			},
		},
		Handler: handleConfig,
	}
)

// parseCmdLine parses the command line into defined commands.
func cmdlineConfig() *cmdline.Config {

	var config = &cmdline.Config{
		Arguments: os.Args[1:],
		Commands: cmdline.Commands{
			optionsCmd,
			configCmd,
		},
	}

	config.Commands.Register(
		&cmdline.Command{
			Name:    "help",
			Help:    "Shows help.",
			Handler: cmdline.HelpHandler,
		},
	)

	return config
}

// handleOptions is a handler for the optionsCmd.
func handleOptions(c cmdline.Context) error {
	return nil
}

// handleConfig is a handler for the configCmd.
func handleConfig(c cmdline.Context) error {
	return nil
}
